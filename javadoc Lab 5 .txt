/**
 * The mainApp class serves as the entry point for the Chat Client Application.
 * It uses SwingUtilities.invokeLater to ensure that the chat client's user interface
 * is created and updated on the Event Dispatch Thread, which is the proper practice
 * for Swing applications to maintain thread safety.
 */
public class mainApp {
    // Class content omitted for brevity
}

/**
 * The {@code ChatClientView} class is responsible for initializing and managing
 * the Graphical User Interface (GUI) components of the chat client.
 * It creates and lays out all the components required for the user to interact with the chat application.
 */
public class ChatClientView {
    // Class content omitted for brevity
}

/**
 * The {@code ChatController} class handles the interaction logic between the {@code ChatClientView} 
 * and {@code ChatModel}. It manages the actions triggered by the user interface and updates the view 
 * based on changes from the model.
 */
public class ChatController {
    // Class content omitted for brevity
}

/**
 * The {@code ChatModel} class manages the client-side network communication logic for the chat application.
 * It handles connecting to the server, sending messages, listening for incoming messages, and disconnecting.
 */
public class ChatModel {
    // Class content omitted for brevity
}

/**
 * The {@code ChatServer} class is responsible for setting up and managing the server-side 
 * functionality of a chat application. It handles client connections, message broadcasting, 
 * and private messaging.
 */
public class ChatServer {
    // Class content omitted for brevity
}

/**
 * The {@code EncryptionUtil} class provides utility methods for encrypting and decrypting text using a simple shift cipher.
 * It shifts characters within the English alphabet by a fixed number of positions.
 */
public class EncryptionUtil {
    // Class content omitted for brevity
}
